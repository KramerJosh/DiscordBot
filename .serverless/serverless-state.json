{
  "service": {
    "service": "sudoku-api",
    "serviceObject": {
      "name": "sudoku-api"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs20.x",
      "environment": {
        "MONGODB_URI": "mongodb+srv://kramerjoshkramerjosh:roXVCLv1MUtfb1Tv@cluster0.ydmxy.mongodb.net/aws_test?retryWrites=true&w=majority&appName=Cluster0"
      },
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "sns:*"
              ],
              "Resource": "arn:aws:sns:us-east-1:481665087818:BOOTCAMP_TOPIC"
            }
          ]
        }
      },
      "stage": "dev",
      "region": "us-east-1",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "GetDashnewDashgameLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/sudoku-api-dev-get-new-game"
            }
          },
          "GetDashmongodbDashdataLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/sudoku-api-dev-get-mongodb-data"
            }
          },
          "ReadDashfromDashtopicLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/sudoku-api-dev-read-from-topic"
            }
          },
          "PostDashmessageLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/sudoku-api-dev-post-message"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "sudoku-api",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/sudoku-api-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/sudoku-api-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "sudoku-api",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "GetDashnewDashgameLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/sudoku-api/dev/1741916395106-2025-03-14T01:39:55.106Z/sudoku-api.zip"
              },
              "Handler": "src/getNewGame.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "sudoku-api-dev-get-new-game",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "MONGODB_URI": "mongodb+srv://kramerjoshkramerjosh:roXVCLv1MUtfb1Tv@cluster0.ydmxy.mongodb.net/aws_test?retryWrites=true&w=majority&appName=Cluster0"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetDashnewDashgameLogGroup"
            ]
          },
          "GetDashmongodbDashdataLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/sudoku-api/dev/1741916395106-2025-03-14T01:39:55.106Z/sudoku-api.zip"
              },
              "Handler": "src/getMongodbData.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "sudoku-api-dev-get-mongodb-data",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "MONGODB_URI": "mongodb+srv://kramerjoshkramerjosh:roXVCLv1MUtfb1Tv@cluster0.ydmxy.mongodb.net/aws_test?retryWrites=true&w=majority&appName=Cluster0"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetDashmongodbDashdataLogGroup"
            ]
          },
          "ReadDashfromDashtopicLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/sudoku-api/dev/1741916395106-2025-03-14T01:39:55.106Z/sudoku-api.zip"
              },
              "Handler": "src/readFromTopic.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "sudoku-api-dev-read-from-topic",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "MONGODB_URI": "mongodb+srv://kramerjoshkramerjosh:roXVCLv1MUtfb1Tv@cluster0.ydmxy.mongodb.net/aws_test?retryWrites=true&w=majority&appName=Cluster0"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ReadDashfromDashtopicLogGroup"
            ]
          },
          "PostDashmessageLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/sudoku-api/dev/1741916395106-2025-03-14T01:39:55.106Z/sudoku-api.zip"
              },
              "Handler": "src/postToTopic.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "sudoku-api-dev-post-message",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "MONGODB_URI": "mongodb+srv://kramerjoshkramerjosh:roXVCLv1MUtfb1Tv@cluster0.ydmxy.mongodb.net/aws_test?retryWrites=true&w=majority&appName=Cluster0"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "PostDashmessageLogGroup"
            ]
          },
          "GetDashnewDashgameLambdaVersionmPKxwa1JtXbwktSfuMyjnFsiIA8EVRYyBzOjfDhi5o": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetDashnewDashgameLambdaFunction"
              },
              "CodeSha256": "rlDvk1UjNSoyd9z3kyyFn+jtkBebiuU25RvoRAfKPr8="
            }
          },
          "GetDashmongodbDashdataLambdaVersionT3NFh5z5LIXEQs8eSlKQ13gf4Iz6PRENIiSCKYi5TD0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetDashmongodbDashdataLambdaFunction"
              },
              "CodeSha256": "rlDvk1UjNSoyd9z3kyyFn+jtkBebiuU25RvoRAfKPr8="
            }
          },
          "ReadDashfromDashtopicLambdaVersionsElGu1X35koe5xl3DdmnCdiyUJROq4NbKh7trnlJkI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ReadDashfromDashtopicLambdaFunction"
              },
              "CodeSha256": "rlDvk1UjNSoyd9z3kyyFn+jtkBebiuU25RvoRAfKPr8="
            }
          },
          "PostDashmessageLambdaVersionLg1tq2jEXtgRKkQNupQwBxAzi7tWJQen0GwDNuVMM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PostDashmessageLambdaFunction"
              },
              "CodeSha256": "rlDvk1UjNSoyd9z3kyyFn+jtkBebiuU25RvoRAfKPr8="
            }
          },
          "ReadDashfromDashtopicSnsSubscriptionBOOTCAMPTOPIC": {
            "Type": "AWS::SNS::Subscription",
            "Properties": {
              "TopicArn": "arn:aws:sns:us-east-1:481665087818:BOOTCAMP_TOPIC",
              "Protocol": "lambda",
              "Endpoint": {
                "Fn::GetAtt": [
                  "ReadDashfromDashtopicLambdaFunction",
                  "Arn"
                ]
              }
            }
          },
          "ReadDashfromDashtopicLambdaPermissionBOOTCAMPTOPICSNS": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ReadDashfromDashtopicLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "sns.amazonaws.com",
              "SourceArn": "arn:aws:sns:us-east-1:481665087818:BOOTCAMP_TOPIC"
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-sudoku-api",
              "ProtocolType": "HTTP"
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "GetDashnewDashgameLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetDashnewDashgameLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetDashnewDashgame": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetDashnewDashgameLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetGetsudoku": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /getsudoku",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetDashnewDashgame"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetDashnewDashgame"
          },
          "GetDashmongodbDashdataLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetDashmongodbDashdataLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetDashmongodbDashdata": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetDashmongodbDashdataLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetGetmongodbdata": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /getmongodbdata",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetDashmongodbDashdata"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetDashmongodbDashdata"
          },
          "PostDashmessageLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PostDashmessageLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationPostDashmessage": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"PostDashmessageLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostPosttotopic": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /posttotopic",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationPostDashmessage"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationPostDashmessage"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-sudoku-api-dev-ServerlessDeploymentBucketName"
            }
          },
          "GetDashnewDashgameLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetDashnewDashgameLambdaVersionmPKxwa1JtXbwktSfuMyjnFsiIA8EVRYyBzOjfDhi5o"
            },
            "Export": {
              "Name": "sls-sudoku-api-dev-GetDashnewDashgameLambdaFunctionQualifiedArn"
            }
          },
          "GetDashmongodbDashdataLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetDashmongodbDashdataLambdaVersionT3NFh5z5LIXEQs8eSlKQ13gf4Iz6PRENIiSCKYi5TD0"
            },
            "Export": {
              "Name": "sls-sudoku-api-dev-GetDashmongodbDashdataLambdaFunctionQualifiedArn"
            }
          },
          "ReadDashfromDashtopicLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ReadDashfromDashtopicLambdaVersionsElGu1X35koe5xl3DdmnCdiyUJROq4NbKh7trnlJkI"
            },
            "Export": {
              "Name": "sls-sudoku-api-dev-ReadDashfromDashtopicLambdaFunctionQualifiedArn"
            }
          },
          "PostDashmessageLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PostDashmessageLambdaVersionLg1tq2jEXtgRKkQNupQwBxAzi7tWJQen0GwDNuVMM"
            },
            "Export": {
              "Name": "sls-sudoku-api-dev-PostDashmessageLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-sudoku-api-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-sudoku-api-dev-HttpApiUrl"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "get-new-game": {
        "handler": "src/getNewGame.handler",
        "events": [
          {
            "httpApi": {
              "path": "/getsudoku",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/getsudoku"
          }
        ],
        "name": "sudoku-api-dev-get-new-game",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "GetDashnewDashgameLambdaVersionmPKxwa1JtXbwktSfuMyjnFsiIA8EVRYyBzOjfDhi5o"
      },
      "get-mongodb-data": {
        "handler": "src/getMongodbData.handler",
        "events": [
          {
            "httpApi": {
              "path": "/getmongodbdata",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/getmongodbdata"
          }
        ],
        "name": "sudoku-api-dev-get-mongodb-data",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "GetDashmongodbDashdataLambdaVersionT3NFh5z5LIXEQs8eSlKQ13gf4Iz6PRENIiSCKYi5TD0"
      },
      "read-from-topic": {
        "handler": "src/readFromTopic.handler",
        "events": [
          {
            "sns": {
              "arn": "arn:aws:sns:us-east-1:481665087818:BOOTCAMP_TOPIC"
            }
          }
        ],
        "name": "sudoku-api-dev-read-from-topic",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "ReadDashfromDashtopicLambdaVersionsElGu1X35koe5xl3DdmnCdiyUJROq4NbKh7trnlJkI"
      },
      "post-message": {
        "handler": "src/postToTopic.handler",
        "events": [
          {
            "httpApi": {
              "path": "/posttotopic",
              "method": "post"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/posttotopic"
          }
        ],
        "name": "sudoku-api-dev-post-message",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "PostDashmessageLambdaVersionLg1tq2jEXtgRKkQNupQwBxAzi7tWJQen0GwDNuVMM"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yaml",
    "initialServerlessConfig": {
      "service": "sudoku-api",
      "useDotenv": true,
      "frameworkVersion": "3",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "C:\\Users\\krame\\bootcamp\\CU-VIRT-FSF-PT-10-2024-U-LOLC\\20-Deployment-CI-CD\\01-Activities\\00-serverless-api\\serverless-api\\.serverless\\sudoku-api.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/sudoku-api/dev/1741916395106-2025-03-14T01:39:55.106Z",
    "artifact": "sudoku-api.zip"
  }
}